<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on Beto</title>
    <link>http://localhost:1313/</link>
    <description>Recent content in Home on Beto</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 01 Jan 0001 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/posts/boundary-wall/docs/geometry/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/boundary-wall/docs/geometry/</guid>
      <description>&lt;h1 id=&#34;geometry&#34;&gt;Geometry&lt;/h1&gt;&#xA;&lt;h2 id=&#34;defining-curves&#34;&gt;Defining curves&lt;/h2&gt;&#xA;&lt;p&gt;The effective use of the &lt;em&gt;Boundary Wall Method&lt;/em&gt; (BWM) requires equal-length segments.&#xA;and the need to interpolate uneven curves. While one might have an equispaced \(x-y\) domain, the arc length \(\mathrm{d}s\) need not be homogeneous.&lt;/p&gt;&#xA;&lt;p&gt;The general steps for using this toolbox with a custom array of points are the following:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Define \((x_i,y_i)\)&#xA;&lt;ul&gt;&#xA;&lt;li&gt;(Re)discretize using&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;For closed curves, we implement the &lt;code&gt;discretizeCurve&lt;/code&gt; function in order to interpolate the whole arc length into \(N\) equal segments. For open curves, one must use &lt;code&gt;discretizeResonatorCurve&lt;/code&gt; (it can be used for closed curves as well, but be mindful of using \(N\) vs. \(N+1\) points). Interpolating with &lt;code&gt;Interpolations.jl&lt;/code&gt; will work as well.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/boundary-wall/docs/introduction/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/boundary-wall/docs/introduction/</guid>
      <description>&lt;p&gt;Essentially, a Boundary Integral Method (BIM) reduces the degrees of freedom of a problem to those of the boundary. It also means that the problem becomes meshless, which means that there is no need for simple domains.&lt;/p&gt;&#xA;&lt;p&gt;However, the method relies on a more abstract notion of integral operators (rather than differential equations). Furthermore, most of the matrices are dense, which While numerical integration can be more stable than numerical differentiation, one may need to project the continuous integral onto a finite-dimensional space of functions, which can be tricky to account for corners (infinite information in Fourier spectrum).&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/boundary-wall/docs/lattice/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/boundary-wall/docs/lattice/</guid>
      <description>&lt;h1 id=&#34;lattices--grids&#34;&gt;Lattices &amp;amp; Grids&lt;/h1&gt;&#xA;&lt;p&gt;These methods implement grids similar to a Bravais lattice, as well as&#xA;their repetition scheme.&lt;/p&gt;&#xA;&lt;h2 id=&#34;constructors&#34;&gt;Constructors&lt;/h2&gt;&#xA;&lt;h2 id=&#34;methods&#34;&gt;Methods&lt;/h2&gt;&#xA;&lt;p&gt;All &lt;code&gt;buildGrid&lt;/code&gt; functions construct a grid with $n\_1\times n\_2$&#xA;elements (depending on their basis vectors).&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-@docs&#34;&gt;buildGrid&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-@example&#34;&gt;buildGrid(HexagonalGrid(SVector(0.0, 0.0), 0.5), 8, 6) |&amp;gt; scatter&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;One can use these as centers for other boundaries.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;using LinearAlgebra&#xA;using StaticArrays: SVector&#xA;&#xA;import BoundaryWall as BWM&#xA;&#xA;N    = 9                         # number of points per element&#xA;R    = 1.0&#xA;θ    = LinRange(0, 2pi, N+1)&#xA;TH   = 180                  # incident angle&#xA;&#xA;STEP = 2.0R + R/2 # diameter  + constant&#xA;N_CIRCLES = (10,7)&#xA;RANGES = [-(N_CIRCLES[1]-1)*STEP/2:STEP:(N_CIRCLES[1]-1)*STEP/2,-(N_CIRCLES[2]-1)*STEP/2:STEP:(N_CIRCLES[2]-1)*STEP/2]&#xA;N_STEPS =length(RANGES)&#xA;CENTERS = vec([(i, j) for i in RANGES[1], j in RANGES[2]])&#xA;&#xA;# delete some indices&#xA;INDICES = sort([31,32,33,43,44,45,46,47,48,38,39, 40, 23, 24, 25, 26, 27, 28])&#xA;&#xA;deleteat!(CENTERS, INDICES)&#xA;&#xA;CIRCLES = [BWM.createCircle(R, θ, SVector(cen)) for cen in CENTERS]&#xA;# ...&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;One then can proceed to plot such circles. The details can be found in the documentation&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/boundary-wall/docs/tutorials/mirror/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/boundary-wall/docs/tutorials/mirror/</guid>
      <description>&lt;h1 id=&#34;beam-splitter&#34;&gt;Beam Splitter&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../src/assets/beam_splitter.svg&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;bragg-mirror&#34;&gt;Bragg Mirror&lt;/h1&gt;&#xA;&lt;p&gt;&lt;img src=&#34;../../src/assets/bragg.svg&#34; alt=&#34;alt text&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/posts/boundary-wall/docs/tutorials/photonic/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/boundary-wall/docs/tutorials/photonic/</guid>
      <description>&lt;h1 id=&#34;photonic-crystal&#34;&gt;Photonic crystal&lt;/h1&gt;&#xA;&lt;p&gt;As usual, import relevant libraries.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;using LinearAlgebra&#xA;using StaticArrays: SVector&#xA;using SpecialFunctions&#xA;# using GLMakie; GLMakie.activate!(inline=false, float=true)&#xA;using CairoMakie&#xA;import BoundaryWall as BWM&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;Now we can define our constants for the problem.&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code class=&#34;language-julia&#34;&gt;# CONSTANTS&#xA;N    = 9                         # number of points per element&#xA;HBAR = 1.0&#xA;MASS = 0.5&#xA;HBAR = 1.0&#xA;SIGMA= (2*MASS/HBAR^2)*(1/4*im)&#xA;NDOM = 100&#xA;zero = 13.3237&#xA;R    = 1.0&#xA;θ    = LinRange(0, 2pi, N+1)&#xA;TH   = 180&#xA;KVEC = SVector(cosd(TH), sind(TH))&#xA;POTENTIAL_STRENGTH = -100.0&#xA;BANDED = 3&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&amp;hellip;and the geometry of such problem.&lt;/p&gt;</description>
    </item>
    <item>
      <title>BoundaryWall.jl, a quick overview</title>
      <link>http://localhost:1313/posts/boundary-wall/docs/overview/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/boundary-wall/docs/overview/</guid>
      <description>&lt;p&gt;Simple toolbox that implements an integral method for solving for an incident (TM) wave with well behaved scatterers.&lt;/p&gt;&#xA;&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;BoundaryWall.jl&lt;/strong&gt; provides a collection of algorithms and tools for&#xA;calculating the scattering of arbitrary boundaries, based upon the work of&#xA;&lt;a href=&#34;https://doi.org/10.1103/PhysRevE.56.2496&#34;&gt;M. G. E. da Luz, A. S. Lupu-Sax, and E. J. Heller on Quantum Scattering&lt;/a&gt;,&#xA;written in pure Julia.&lt;/p&gt;&#xA;&lt;p&gt;The design of this project was motivated for calculating eigenstates&#xA;and scattering wavefunctions in billiards (&lt;a href=&#34;https://doi.org/10.1016/j.aop.2008.01.008&#34;&gt;F.M. Zanetti et al.&lt;/a&gt;,&#xA;&lt;a href=&#34;https://doi.org/10.1103/PhysRevE.109.034203&#34;&gt;A. Ruiz-Biestro et al.&lt;/a&gt;).&lt;/p&gt;</description>
    </item>
    <item>
      <title>Gallery</title>
      <link>http://localhost:1313/gallery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/gallery/</guid>
      <description>&lt;p&gt;&lt;img src=&#34;../../../posts/boundary-wall/billar3.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;../../../posts/waves/wave.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;../../../posts/waves/gimp.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;!-- ![](../../../posts/bg.png) --&gt;&#xA;&lt;!-- ![](../../../posts/boundary-wall/beam_splitter.png) --&gt;&#xA;&lt;!-- ![](../../../posts/boundary-wall/feature.gif) --&gt;&#xA;&lt;!-- ![](../../../posts/boundary-wall/circle2.gif) --&gt;&#xA;&lt;!-- ![](../../../posts/boundary-wall/GRID.png) --&gt;&#xA;&lt;!-- ![](../../../posts/boundary-wall/lattice.png) --&gt;&#xA;&lt;!-- ![](../../../posts/boundary-wall/lattice_defects.png) --&gt;</description>
    </item>
    <item>
      <title>Resume</title>
      <link>http://localhost:1313/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/resume/</guid>
      <description>&lt;style&gt;&#xA;td, th {&#xA;   border: none!important;&#xA;}&#xA;&lt;/style&gt;&#xA;&lt;p&gt;Click &lt;a href=&#34;https://raw.githubusercontent.com/ModifiedBear/Resume/master/cv.pdf&#34;&gt;here&lt;/a&gt; for the complete .pdf version.&lt;/p&gt;&#xA;&lt;h2 id=&#34;education&#34;&gt;Education&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;2024 &amp;ndash; Present: Ph.D. Physics &amp;amp; Astronomy, Rice University.&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;li&gt;2020 &amp;ndash; 2024: B.Sc. Engineering Physics, Monterrey Institute of Technology.&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GPA: 96.98/100&lt;/li&gt;&#xA;&lt;li&gt;TOEFL iBT score: 108/120&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;publications&#34;&gt;Publications&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&lt;strong&gt;Alberto Ruiz-Biestro&lt;/strong&gt; and Julio C. Gutierrez-Vega.&#xA;&amp;ldquo;Solutions of the Lippmann-Schwinger equation for confocal parabolic billiards&amp;rdquo;.&#xA;&lt;strong&gt;Phys. Rev. E.&lt;/strong&gt;, Mar 2024. &lt;a href=&#34;https://doi.org/10.1103/PhysRevE.109.034203&#34;&gt;doi:10.1103/PhysRevE.109.034203.&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h3 id=&#34;conference-presentations&#34;&gt;Conference Presentations&lt;/h3&gt;&#xA;&lt;ol reversed&gt;&#xA;  &lt;li&gt;Mexican Optics and Photonics Meeting. Poster presentation. &#34;Lippmann-Schwinger equation in parabolic geometries&#34;. Nov 2023&lt;/li&gt;&#xA;  &lt;li&gt;National Space Activity Congress (CONACES). “Raman spectrometer design for biosignature detection” (virtual). Nov 2021.&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;h2 id=&#34;awards&#34;&gt;Awards&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Apr 2023: &lt;strong&gt;Best Team Project&lt;/strong&gt;. &lt;em&gt;International Centre for Theoretical Physics &amp;amp; Quantinuum&lt;/em&gt;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
